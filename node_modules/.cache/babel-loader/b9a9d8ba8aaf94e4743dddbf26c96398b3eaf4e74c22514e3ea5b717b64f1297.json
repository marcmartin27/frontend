{"ast":null,"code":"// filepath: futbol-dashboard/frontend/src/services/authService.js\n\nimport axios from 'axios';\nconst API_URL = 'http://localhost:8000/api/users/';\nconst register = async userData => {\n  try {\n    const response = await axios.post(`${API_URL}register/`, userData);\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || {\n      error: 'Registration failed'\n    };\n  }\n};\nconst login = async credentials => {\n  try {\n    const response = await axios.post(`${API_URL}login/`, credentials);\n    if (response.data.token) {\n      localStorage.setItem('user', JSON.stringify(response.data));\n    }\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || {\n      error: 'Login failed'\n    };\n  }\n};\nconst logout = () => {\n  localStorage.removeItem('user');\n};\nconst getCurrentUser = () => {\n  return JSON.parse(localStorage.getItem('user'));\n};\n\n// Check if user is authenticated\nconst isAuthenticated = () => {\n  const user = getCurrentUser();\n  return !!user && !!user.token;\n};\n\n// Add token to axios headers for authenticated requests\nconst setupAxiosInterceptors = () => {\n  axios.interceptors.request.use(config => {\n    const user = getCurrentUser();\n    if (user && user.token) {\n      config.headers.Authorization = `JWT ${user.token}`;\n    }\n    return config;\n  }, error => {\n    return Promise.reject(error);\n  });\n};\nexport default {\n  register,\n  login,\n  logout,\n  getCurrentUser,\n  isAuthenticated,\n  setupAxiosInterceptors\n};","map":{"version":3,"names":["axios","API_URL","register","userData","response","post","data","error","_error$response","login","credentials","token","localStorage","setItem","JSON","stringify","_error$response2","logout","removeItem","getCurrentUser","parse","getItem","isAuthenticated","user","setupAxiosInterceptors","interceptors","request","use","config","headers","Authorization","Promise","reject"],"sources":["C:/Users/Marc/Desktop/futbol-dashboard/frontend/src/services/authService.js"],"sourcesContent":["// filepath: futbol-dashboard/frontend/src/services/authService.js\n\nimport axios from 'axios';\n\nconst API_URL = 'http://localhost:8000/api/users/';\n\nconst register = async (userData) => {\n    try {\n        const response = await axios.post(`${API_URL}register/`, userData);\n        return response.data;\n    } catch (error) {\n        throw error.response?.data || { error: 'Registration failed' };\n    }\n};\n\nconst login = async (credentials) => {\n    try {\n        const response = await axios.post(`${API_URL}login/`, credentials);\n        if (response.data.token) {\n            localStorage.setItem('user', JSON.stringify(response.data));\n        }\n        return response.data;\n    } catch (error) {\n        throw error.response?.data || { error: 'Login failed' };\n    }\n};\n\nconst logout = () => {\n    localStorage.removeItem('user');\n};\n\nconst getCurrentUser = () => {\n    return JSON.parse(localStorage.getItem('user'));\n};\n\n// Check if user is authenticated\nconst isAuthenticated = () => {\n    const user = getCurrentUser();\n    return !!user && !!user.token;\n};\n\n// Add token to axios headers for authenticated requests\nconst setupAxiosInterceptors = () => {\n    axios.interceptors.request.use(\n        (config) => {\n            const user = getCurrentUser();\n            if (user && user.token) {\n                config.headers.Authorization = `JWT ${user.token}`;\n            }\n            return config;\n        },\n        (error) => {\n            return Promise.reject(error);\n        }\n    );\n};\n\nexport default {\n    register,\n    login,\n    logout,\n    getCurrentUser,\n    isAuthenticated,\n    setupAxiosInterceptors\n};"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,kCAAkC;AAElD,MAAMC,QAAQ,GAAG,MAAOC,QAAQ,IAAK;EACjC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,OAAO,WAAW,EAAEE,QAAQ,CAAC;IAClE,OAAOC,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA;IACZ,MAAM,EAAAA,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAI;MAAEC,KAAK,EAAE;IAAsB,CAAC;EAClE;AACJ,CAAC;AAED,MAAME,KAAK,GAAG,MAAOC,WAAW,IAAK;EACjC,IAAI;IACA,MAAMN,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,OAAO,QAAQ,EAAES,WAAW,CAAC;IAClE,IAAIN,QAAQ,CAACE,IAAI,CAACK,KAAK,EAAE;MACrBC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACX,QAAQ,CAACE,IAAI,CAAC,CAAC;IAC/D;IACA,OAAOF,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAS,gBAAA;IACZ,MAAM,EAAAA,gBAAA,GAAAT,KAAK,CAACH,QAAQ,cAAAY,gBAAA,uBAAdA,gBAAA,CAAgBV,IAAI,KAAI;MAAEC,KAAK,EAAE;IAAe,CAAC;EAC3D;AACJ,CAAC;AAED,MAAMU,MAAM,GAAGA,CAAA,KAAM;EACjBL,YAAY,CAACM,UAAU,CAAC,MAAM,CAAC;AACnC,CAAC;AAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;EACzB,OAAOL,IAAI,CAACM,KAAK,CAACR,YAAY,CAACS,OAAO,CAAC,MAAM,CAAC,CAAC;AACnD,CAAC;;AAED;AACA,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAC1B,MAAMC,IAAI,GAAGJ,cAAc,CAAC,CAAC;EAC7B,OAAO,CAAC,CAACI,IAAI,IAAI,CAAC,CAACA,IAAI,CAACZ,KAAK;AACjC,CAAC;;AAED;AACA,MAAMa,sBAAsB,GAAGA,CAAA,KAAM;EACjCxB,KAAK,CAACyB,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;IACR,MAAML,IAAI,GAAGJ,cAAc,CAAC,CAAC;IAC7B,IAAII,IAAI,IAAIA,IAAI,CAACZ,KAAK,EAAE;MACpBiB,MAAM,CAACC,OAAO,CAACC,aAAa,GAAG,OAAOP,IAAI,CAACZ,KAAK,EAAE;IACtD;IACA,OAAOiB,MAAM;EACjB,CAAC,EACArB,KAAK,IAAK;IACP,OAAOwB,OAAO,CAACC,MAAM,CAACzB,KAAK,CAAC;EAChC,CACJ,CAAC;AACL,CAAC;AAED,eAAe;EACXL,QAAQ;EACRO,KAAK;EACLQ,MAAM;EACNE,cAAc;EACdG,eAAe;EACfE;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}