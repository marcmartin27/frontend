{"ast":null,"code":"import { authHeader } from './auth';\nconst API_URL = 'http://localhost:8000/api/teams';\nconst PLAYER_API_URL = 'http://localhost:8000/api/players';\nexport const getTeamPlayers = async teamId => {\n  try {\n    const response = await fetch(`${API_URL}/${teamId}/players/`, {\n      headers: authHeader()\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.error || `Error ${response.status}: ${response.statusText}`);\n    }\n    const data = await response.json();\n    return Array.isArray(data) ? data : [];\n  } catch (err) {\n    console.error(\"Error cargando jugadores:\", err);\n    throw err;\n  }\n};\nexport const createPlayer = async (teamId, playerData) => {\n  try {\n    const response = await fetch(`${API_URL}/${teamId}/players/create/`, {\n      method: 'POST',\n      headers: {\n        ...authHeader(),\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(playerData)\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.error || `Error ${response.status}: ${response.statusText}`);\n    }\n    return await response.json();\n  } catch (err) {\n    console.error(\"Error creando jugador:\", err);\n    throw err;\n  }\n};\nexport const deletePlayer = async playerId => {\n  try {\n    const response = await fetch(`${PLAYER_API_URL}/${playerId}/`, {\n      method: 'DELETE',\n      headers: authHeader()\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.error || `Error ${response.status}: ${response.statusText}`);\n    }\n    return true;\n  } catch (err) {\n    console.error(\"Error eliminando jugador:\", err);\n    throw err;\n  }\n};\nexport const updatePlayer = async (playerId, playerData) => {\n  try {\n    const response = await fetch(`${PLAYER_API_URL}/${playerId}/`, {\n      method: 'PUT',\n      headers: {\n        ...authHeader(),\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(playerData)\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.error || `Error ${response.status}: ${response.statusText}`);\n    }\n    return await response.json();\n  } catch (err) {\n    console.error(\"Error actualizando jugador:\", err);\n    throw err;\n  }\n};","map":{"version":3,"names":["authHeader","API_URL","PLAYER_API_URL","getTeamPlayers","teamId","response","fetch","headers","ok","errorData","json","Error","error","status","statusText","data","Array","isArray","err","console","createPlayer","playerData","method","body","JSON","stringify","deletePlayer","playerId","updatePlayer"],"sources":["C:/Users/Marc/Desktop/futbol-dashboard/frontend/src/services/playerService.js"],"sourcesContent":["import { authHeader } from './auth';\r\n\r\nconst API_URL = 'http://localhost:8000/api/teams';\r\nconst PLAYER_API_URL = 'http://localhost:8000/api/players';\r\n\r\nexport const getTeamPlayers = async (teamId) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/${teamId}/players/`, {\r\n      headers: authHeader()\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.error || `Error ${response.status}: ${response.statusText}`);\r\n    }\r\n    \r\n    const data = await response.json();\r\n    return Array.isArray(data) ? data : [];\r\n  } catch (err) {\r\n    console.error(\"Error cargando jugadores:\", err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const createPlayer = async (teamId, playerData) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/${teamId}/players/create/`, {\r\n      method: 'POST',\r\n      headers: {\r\n        ...authHeader(),\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(playerData)\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.error || `Error ${response.status}: ${response.statusText}`);\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (err) {\r\n    console.error(\"Error creando jugador:\", err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const deletePlayer = async (playerId) => {\r\n  try {\r\n    const response = await fetch(`${PLAYER_API_URL}/${playerId}/`, {\r\n      method: 'DELETE',\r\n      headers: authHeader()\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.error || `Error ${response.status}: ${response.statusText}`);\r\n    }\r\n    \r\n    return true;\r\n  } catch (err) {\r\n    console.error(\"Error eliminando jugador:\", err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const updatePlayer = async (playerId, playerData) => {\r\n  try {\r\n    const response = await fetch(`${PLAYER_API_URL}/${playerId}/`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        ...authHeader(),\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(playerData)\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.error || `Error ${response.status}: ${response.statusText}`);\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (err) {\r\n    console.error(\"Error actualizando jugador:\", err);\r\n    throw err;\r\n  }\r\n};"],"mappings":"AAAA,SAASA,UAAU,QAAQ,QAAQ;AAEnC,MAAMC,OAAO,GAAG,iCAAiC;AACjD,MAAMC,cAAc,GAAG,mCAAmC;AAE1D,OAAO,MAAMC,cAAc,GAAG,MAAOC,MAAM,IAAK;EAC9C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,OAAO,IAAIG,MAAM,WAAW,EAAE;MAC5DG,OAAO,EAAEP,UAAU,CAAC;IACtB,CAAC,CAAC;IAEF,IAAI,CAACK,QAAQ,CAACG,EAAE,EAAE;MAChB,MAAMC,SAAS,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,KAAK,IAAI,SAASP,QAAQ,CAACQ,MAAM,KAAKR,QAAQ,CAACS,UAAU,EAAE,CAAC;IACxF;IAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAOM,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,GAAGA,IAAI,GAAG,EAAE;EACxC,CAAC,CAAC,OAAOG,GAAG,EAAE;IACZC,OAAO,CAACP,KAAK,CAAC,2BAA2B,EAAEM,GAAG,CAAC;IAC/C,MAAMA,GAAG;EACX;AACF,CAAC;AAED,OAAO,MAAME,YAAY,GAAG,MAAAA,CAAOhB,MAAM,EAAEiB,UAAU,KAAK;EACxD,IAAI;IACF,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,OAAO,IAAIG,MAAM,kBAAkB,EAAE;MACnEkB,MAAM,EAAE,MAAM;MACdf,OAAO,EAAE;QACP,GAAGP,UAAU,CAAC,CAAC;QACf,cAAc,EAAE;MAClB,CAAC;MACDuB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,UAAU;IACjC,CAAC,CAAC;IAEF,IAAI,CAAChB,QAAQ,CAACG,EAAE,EAAE;MAChB,MAAMC,SAAS,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,KAAK,IAAI,SAASP,QAAQ,CAACQ,MAAM,KAAKR,QAAQ,CAACS,UAAU,EAAE,CAAC;IACxF;IAEA,OAAO,MAAMT,QAAQ,CAACK,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOQ,GAAG,EAAE;IACZC,OAAO,CAACP,KAAK,CAAC,wBAAwB,EAAEM,GAAG,CAAC;IAC5C,MAAMA,GAAG;EACX;AACF,CAAC;AAED,OAAO,MAAMQ,YAAY,GAAG,MAAOC,QAAQ,IAAK;EAC9C,IAAI;IACF,MAAMtB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,cAAc,IAAIyB,QAAQ,GAAG,EAAE;MAC7DL,MAAM,EAAE,QAAQ;MAChBf,OAAO,EAAEP,UAAU,CAAC;IACtB,CAAC,CAAC;IAEF,IAAI,CAACK,QAAQ,CAACG,EAAE,EAAE;MAChB,MAAMC,SAAS,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,KAAK,IAAI,SAASP,QAAQ,CAACQ,MAAM,KAAKR,QAAQ,CAACS,UAAU,EAAE,CAAC;IACxF;IAEA,OAAO,IAAI;EACb,CAAC,CAAC,OAAOI,GAAG,EAAE;IACZC,OAAO,CAACP,KAAK,CAAC,2BAA2B,EAAEM,GAAG,CAAC;IAC/C,MAAMA,GAAG;EACX;AACF,CAAC;AAED,OAAO,MAAMU,YAAY,GAAG,MAAAA,CAAOD,QAAQ,EAAEN,UAAU,KAAK;EAC1D,IAAI;IACF,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,cAAc,IAAIyB,QAAQ,GAAG,EAAE;MAC7DL,MAAM,EAAE,KAAK;MACbf,OAAO,EAAE;QACP,GAAGP,UAAU,CAAC,CAAC;QACf,cAAc,EAAE;MAClB,CAAC;MACDuB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,UAAU;IACjC,CAAC,CAAC;IAEF,IAAI,CAAChB,QAAQ,CAACG,EAAE,EAAE;MAChB,MAAMC,SAAS,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,KAAK,IAAI,SAASP,QAAQ,CAACQ,MAAM,KAAKR,QAAQ,CAACS,UAAU,EAAE,CAAC;IACxF;IAEA,OAAO,MAAMT,QAAQ,CAACK,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOQ,GAAG,EAAE;IACZC,OAAO,CAACP,KAAK,CAAC,6BAA6B,EAAEM,GAAG,CAAC;IACjD,MAAMA,GAAG;EACX;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}