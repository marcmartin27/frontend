{"ast":null,"code":"// src/services/teamService.js\nimport { authHeader } from './auth';\nconst API_URL = 'http://localhost:8000/api/teams';\nexport const getTeams = async () => {\n  try {\n    const response = await fetch(`${API_URL}/`, {\n      headers: authHeader()\n    });\n    if (!response.ok) {\n      const clonedResponse = response.clone();\n      try {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `Error ${response.status}: ${response.statusText}`);\n      } catch (jsonError) {\n        const textError = await clonedResponse.text();\n        throw new Error(`Error ${response.status}: ${textError.substring(0, 100)}...`);\n      }\n    }\n    const data = await response.json();\n    return Array.isArray(data) ? data : [];\n  } catch (err) {\n    console.error(\"Error cargando equipos:\", err);\n    throw err;\n  }\n};\nexport const createTeam = async teamData => {\n  try {\n    const response = await fetch(`${API_URL}/create/`, {\n      method: 'POST',\n      headers: {\n        ...authHeader(),\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(teamData)\n    });\n    if (!response.ok) {\n      const clonedResponse = response.clone();\n      try {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `Error ${response.status}: ${response.statusText}`);\n      } catch (jsonError) {\n        const textError = await clonedResponse.text();\n        throw new Error(`Error ${response.status}: ${textError.substring(0, 100)}...`);\n      }\n    }\n    return await response.json();\n  } catch (err) {\n    console.error(\"Error creando equipo:\", err);\n    throw err;\n  }\n};\n\n// Añadir estas funciones al archivo\n\nexport const updateTeam = async (teamId, teamData) => {\n  try {\n    const response = await fetch(`${API_URL}/${teamId}/`, {\n      method: 'PUT',\n      headers: {\n        ...authHeader(),\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(teamData)\n    });\n    if (!response.ok) {\n      const clonedResponse = response.clone();\n      try {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `Error ${response.status}: ${response.statusText}`);\n      } catch (jsonError) {\n        const textError = await clonedResponse.text();\n        throw new Error(`Error ${response.status}: ${textError.substring(0, 100)}...`);\n      }\n    }\n    return await response.json();\n  } catch (err) {\n    console.error(\"Error actualizando equipo:\", err);\n    throw err;\n  }\n};\nexport const deleteTeam = async teamId => {\n  try {\n    const response = await fetch(`${API_URL}/${teamId}/`, {\n      method: 'DELETE',\n      headers: authHeader()\n    });\n    if (!response.ok) {\n      const clonedResponse = response.clone();\n      try {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `Error ${response.status}: ${response.statusText}`);\n      } catch (jsonError) {\n        const textError = await clonedResponse.text();\n        throw new Error(`Error ${response.status}: ${textError.substring(0, 100)}...`);\n      }\n    }\n    return true;\n  } catch (err) {\n    console.error(\"Error eliminando equipo:\", err);\n    throw err;\n  }\n};","map":{"version":3,"names":["authHeader","API_URL","getTeams","response","fetch","headers","ok","clonedResponse","clone","errorData","json","Error","error","status","statusText","jsonError","textError","text","substring","data","Array","isArray","err","console","createTeam","teamData","method","body","JSON","stringify","updateTeam","teamId","deleteTeam"],"sources":["C:/Users/Marc/Desktop/futbol-dashboard/frontend/src/services/TeamService.js"],"sourcesContent":["// src/services/teamService.js\r\nimport { authHeader } from './auth';\r\n\r\nconst API_URL = 'http://localhost:8000/api/teams';\r\n\r\nexport const getTeams = async () => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/`, {\r\n      headers: authHeader()\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const clonedResponse = response.clone();\r\n      try {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || `Error ${response.status}: ${response.statusText}`);\r\n      } catch (jsonError) {\r\n        const textError = await clonedResponse.text();\r\n        throw new Error(`Error ${response.status}: ${textError.substring(0, 100)}...`);\r\n      }\r\n    }\r\n    \r\n    const data = await response.json();\r\n    return Array.isArray(data) ? data : [];\r\n  } catch (err) {\r\n    console.error(\"Error cargando equipos:\", err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const createTeam = async (teamData) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/create/`, {\r\n      method: 'POST',\r\n      headers: {\r\n        ...authHeader(),\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(teamData)\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const clonedResponse = response.clone();\r\n      try {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || `Error ${response.status}: ${response.statusText}`);\r\n      } catch (jsonError) {\r\n        const textError = await clonedResponse.text();\r\n        throw new Error(`Error ${response.status}: ${textError.substring(0, 100)}...`);\r\n      }\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (err) {\r\n    console.error(\"Error creando equipo:\", err);\r\n    throw err;\r\n  }\r\n};\r\n\r\n// Añadir estas funciones al archivo\r\n\r\nexport const updateTeam = async (teamId, teamData) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/${teamId}/`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        ...authHeader(),\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(teamData)\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const clonedResponse = response.clone();\r\n      try {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || `Error ${response.status}: ${response.statusText}`);\r\n      } catch (jsonError) {\r\n        const textError = await clonedResponse.text();\r\n        throw new Error(`Error ${response.status}: ${textError.substring(0, 100)}...`);\r\n      }\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (err) {\r\n    console.error(\"Error actualizando equipo:\", err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const deleteTeam = async (teamId) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/${teamId}/`, {\r\n      method: 'DELETE',\r\n      headers: authHeader()\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const clonedResponse = response.clone();\r\n      try {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || `Error ${response.status}: ${response.statusText}`);\r\n      } catch (jsonError) {\r\n        const textError = await clonedResponse.text();\r\n        throw new Error(`Error ${response.status}: ${textError.substring(0, 100)}...`);\r\n      }\r\n    }\r\n    \r\n    return true;\r\n  } catch (err) {\r\n    console.error(\"Error eliminando equipo:\", err);\r\n    throw err;\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}